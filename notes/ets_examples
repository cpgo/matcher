{{"96c4e727-a7d2-4d1f-9ccd-215c54c13889", {{"username", "user@email.com"}}}, {"username", "EQUAL", "user@email.com"}}
{ {1,2}, { %{ op: 'or', lhs: %{ lhs: 'username', condition: 'equal', rhs: 'user@email' }, rhs: %{ lhs: 'age', condition: 'greater_than', rhs: '18' } } } }

{{key, {{username, value}}}, {_u, _op, _v}}

usar duplicate_bag pois pode existir regras que apontam pros mesmos parametros
circles = :ets.new(:circles, [:duplicate_bag, :protected, :named_table])

f = :ets.fun2ms(fn {{key, {{username, value}}}, {_u, _op, _v}} when (username == "username" and value == "user@email.com") -> key end)




{
  chave -> #{"96c4e727-a7d2-4d1f-9ccd-215c54c13889", {{"username", "user@email.com"}}},

  valor -> #{"username", "EQUAL", "user@email.com"}
}


a partir do valor eu tenho que montar a expression
f2 =
  :ets.fun2ms(fn {{key, {{username, value}}}, _v}
                 when username == "username" and value == "user@email.com" ->
    key
  end)


f3 =
  :ets.fun2ms(fn {{key, {{"username", "user@email.com"}}}, _v} ->
    key
  end)

:ets.select(:circles, f2)





%{
  op: 'or',
  lhs: %{
    lhs: 'username',
    condition: 'equal',
    rhs: 'user@email'
  },
  rhs: %{
    lhs: 'age',
    condition: 'greater_than',
    rhs: '18'
  }
}




json_string = """
{
"name": "Test",
"workspaceId": "96c4e727-a7d2-4d1f-9ccd-215c54c13889",
"rules": {
    "logicalOperator": "OR",
    "type": "CLAUSE",
    "clauses": [
        {
            "type": "RULE",
            "content": {
                "key": "username",
                "value": [
                    "user@email.com"
                ],
                "condition": "EQUAL"
            }
        }
    ]
},
"authorId": "c7e6dafe-aa7a-4536-be1b-34eaad4c2915"
}
"""

Matcher.CreateEtsRecord.generate_record(json_string)
circles = :ets.new(:circles, [:duplicate_bag, :protected, :named_table])
record1 = Matcher.CreateEtsRecord.generate_record(json_string)
:ets.lookup(:circles, Matcher.CreateTupleKey.generate_keys(json_string))
